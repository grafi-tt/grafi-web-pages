= Gentoo Linuxインストール記(前編)

デスクトップ用PCにgentooのamd64版を入れてみました。デスクトップ構成でxfce4使用。今のところWindowsXP32bitとのデュアルブートです。

ハードウェア構成はこんな感じ

マザボ::
  MSI KA790GX
CPU::
  PhenomⅡ925 定格クロック
メモリ::
  DDR2 PC5300 SiliconPower2GB*2
グラボ::
  マザボに内蔵(HD3300)
HDD::
  日立Deskstar7k500&amp;P7k500の500GBでオンボRAID1+データ用に1TB(ALL SATA)
光学ドライブ::
  東芝NEC ND-7200(IDE)

HDD以外は何も余計なものが無いシンプルな構成です。オンボRAIDの認識とグラボで苦労しました。

参考にしたサイトは

- http://www.gentoo.org/doc/ja/handbook/
- http://gentoo-install.com/
- http://wiki.gentoo.gr.jp/
- http://en.gentoo-wiki.com/wiki/Main_Page

あたりです。

面倒なことの嫌いな人、英語の読めない人、コンソールを触ったことの無い人には厳しいかと思いますが(この三つって結構きつめな条件かもしれない)、それ以外の人には割とお勧め出来るディストリです。

公式のハンドブックのコマンドをそのまま書いてもしょうがないので、自分が嵌った所を中心に書きます。なお、内容は無保証です。まあインストールが正常に出来ない以上の被害は無いでしょう。

== 作業の概要
基本的に公式のハンドブック通りやれば問題無いです。良くgentooのインストールは難しいと言われるし実際結構苦労したけど、大まかな作業の流れさえ掴めばまだ楽かと思います。

1.Linux環境でブート　
2.ファイルシステムの作成、マウント
3.gentooのstage3ファイル(最小システム)を展開
4.Portage関係の設定ファイルを編集
5.ネット接続関係のファイルやらデバイスやらをchroot後も認識出来るようにする
6.chrootした後環境変数の更新
7.gccの更新、システムの更新
8.カーネルを生成
9.サービス、grub、カーネル関係、ファイルシステム関係をemerge
10.サービス、ネットワーク、時計、fstabの設定
11.rootのパスワードを設定
12.grubをインストール

てな感じでやった後再起動して、後の設定はそれからやれば良いでしょう。若干ハンドブックと順番違うかもしれませんが、まあ大して気にしなくて良いです。

localeの設定は再起動前にやってる説明が多いけど後にやってもいいんじゃ無いか思います。どうせそれだけじゃ日本語出ませんし。もちろんXのインストール・設定も再起動後にやります。

== まずはブート
ハンドブックにはgentooのliveCDを使うように書いていますが、ぶっちゃけブート可能なKernel2.6系のLinuxなら何でも良いです。自分はDebianも使っていて慣れてるのでDebianLennyのXFce4なLiveCDでやりました。

普通にインストールしただけの環境がそのままCDになってるので、ツールとかはaptで拾ってくる必要があるし標準じゃ日本語も通りません。なのでKnoppixの方が良いかもしれません。

で、ブートした後ファイルシステムの作成に入ります。オンボRAIDな環境では

[source,sh]
--------------------
aptitude dmraid
--------------------

が必要です。
その後適宜パーティション、ファイルシステムの作成をします。この辺の解説は他のサイトに任せます。gpartedを使うのが楽で良いかも。自分はファイルの安全のため先にRAID1を片肺にしてファイルをバックアップしてからパーティション弄りました。

で、マウントした後に好きなWebブラウザやFTPクライアントでダウンロードしてきたStage3を展開します。

Portageの設定ですが、とりあえずミラーの設定とスレッド数の設定位で良いでしょう。どうせGCCをアップデートするから最適化しても同じだし。で、chrootしてenv-updateします。

これからGCCのアップデートに入る訳ですが、GCC4系同士のアップデートを前提に書いているので注意して下さい。GCCの最新版を使いたい場合は/etc/portage/package.keywordに

--------------------
sys-devel/gcc `amd64(自分の環境に合わせる)
--------------------

とでも書いておきましょう。自分の環境では特に問題なく動作してます

[source,sh]
--------------------
emerge -uav gcc
gcc-config amd64-pc-linux-gnu-4.3.3(新しいバージョンを選択する)
source /etc/profile
emerge --oneshot -av libtool
emerge --unmerge =sys-devel/gcc-4.1.2(古いバージョン)
--------------------
でアップデートします。

その後USEフラッグや最適化オプションを好きに設定します。GCC4.2以降では-march=nativeで自動でアーキテクチャごとに最適化してくれるので、もうathronやらnoconaやら書かなくて良いです。KDEもGNOMEも入れなくてデスクトップなプロファイルを指定した自分のような人は適宜gnomeやらをUSEフラッグから削って下さい。

[source,sh]
--------------------
emerge -e world
--------------------

で、システムの再構築を行う。この段階でエラーが出たらUSEフラッグから余計なものを削るとかして下さい。package.keywordで最新版指定すれば上手くいくことも多いです。

そろそろ疲れたので後は後編で書きます。
